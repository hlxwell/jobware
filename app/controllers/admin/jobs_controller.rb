# Controller generated by Typus, use it to extend admin functionality.
require 'nokogiri'

class Admin::JobsController < Admin::ResourcesController
  def new
    @staging_jobs = StagingJob.paginate :all, :page => params[:page], :per_page => 30
  end

  def upload_xml
    if file = params[:xml][:file]
      @unsaved_jobs = []
      @saved_jobs = []
      doc = Nokogiri::XML(file.read)
      doc.xpath("//Content").find_all { |n|
        d = Nokogiri::XML(n.to_s)
        staging_job = StagingJob.new({
          :origin_id => d.xpath("//ID").children.to_s.html_safe,
          :name => d.xpath("//岗位名称").children.to_s.html_safe,
          :location => d.xpath("//工作地点").children.to_s.html_safe,
          :vacancy => d.xpath("//岗位人数").children.to_s.html_safe,
          :salary_range => d.xpath("//薪资范围").children.to_s.html_safe,
          :work_year_requirement => d.xpath("//工作年限").children.to_s.html_safe,
          :degree_requirement => d.xpath("//学历要求").children.to_s.html_safe,
          :page_url => d.xpath("//PageUrl").children.to_s.html_safe,
          :desc => d.xpath("//职位描述").children.to_s.html_safe,
          :company_name => d.xpath("//公司名字").children.to_s.html_safe,
          :company_desc => d.xpath("//公司简介").children.to_s.html_safe,
          :contact => d.xpath("//联系方式").children.to_s.html_safe,
          :industry => d.xpath("//公司行业").children.to_s.html_safe,
          :state => '0'
        })

        if staging_job.save
          @saved_jobs << staging_job
        else
          @unsaved_jobs << staging_job
        end
      }
    else
      redirect_to :new
    end
  end


  def approve
    if get_object.approve
      redirect_to :back, :notice => "审核通过。"
    else
      redirect_to :back, :notice => "不能审核已经通过审核的。"
    end
  end

  def reject
    if get_object.reject
      redirect_to :back, :notice => "审核不通过。"
    else
      redirect_to :back, :notice => "拒绝审核出错。"
    end
  end

  def theme
    @jobs = Job.paginate :all, :page => params[:page], :per_page => 30
  end

  def update_themes
    edited_ids = params[:job_ids].try(:keys) ||[]
    non_themes_ids = params[:ids] - edited_ids

    if params[:job_ids]
      flash[:notice] = "Update successfully。"
      params[:job_ids].each do |job_id, themes|
        Job.update_all(["themes=?", themes.uniq.join(",")], ["id=?", job_id])
      end
    end

    # clean cancelled themes
    Job.update_all(["themes=?", ""], ["id in (?)", non_themes_ids])

    redirect_to :action => :theme, :page => params[:page]
  end

  def recommend_resumes
    @job = get_object

    if request.post?
      flash[:notice] = "Successed to recommend resumes."
    end
  end
end